a:5:{s:2:"id";s:8:"33226828";s:4:"info";a:4:{s:6:"Title:";s:34:"Creating a Second Super Admin User";s:7:"Author:";s:17:"Everett Griffiths";s:16:"Last Changed by:";s:17:"Everett Griffiths";s:12:"Wiki Markup:";s:49:"[revolution20:Creating a Second Super Admin User]";}s:6:"parent";s:8:"18678350";s:6:"source";s:3271:"\\

h2. The Problem

You want another MODx Revolution User to have full manager access, with all the [Permissions] of an Administrator user. Perhaps it&#39;s your colleague or your client, but by creating another Administrator, you are handing over the keys to the _entire_ site. This is a simplistic scenario: the other admin would be able to modify or delete your user, so it may not be a viable solution for what you need to do. In the process of walking users through this task, this page gives a brief introduction to roles and access policies.

h2. The Solution

After logging into your site&#39;s manager, do the following:

# Create a new user: Security \-&gt; Manage Users \-&gt; New User
# Be sure you give the new user a unique username, password, and email.
# Before saving the user, click the tab marked *Access Permissions* and click the button marked *Add User Group to User*
## *User Group:* {{Administrator}}
## *Role:* {{Super User}}
# Save the user.  (You can always return to Security \-&gt; Manage Users and right-click the user to update the properties).
# Try logging in to the manager using a different browser to verify that the login works.

h2. Why can&#39;t I add another Administrator with a different [Role|Roles], e.g. a &quot;Member&quot;?

Try it. When you try to login using the other username with only a &quot;Member&quot; role, permission will be denied.  But why?  It has to do with [Context Access|Contexts] and [Access Policies|Policies], which get a lot more complicated in a hurry.  If you have a look at Security \-&gt; Access Controls and then right-click the Administrator User Group \-&gt; Update User Group, then click on the *Context Access* tab. You&#39;ll see something like this:

!User-Group-Perms.jpg|border=1!

By default, MODx Revolution has 2 contexts: *web* (the front-end) and *mgr* (the back-end). From this table, we can learn 2 things: that the _minimum_ role is the Super-User role, and the &quot;Access Policy&quot; in use for this context is &quot;Administrator&quot;.  Even if you don&#39;t understand what all of that means, this is a good place to start educating you about permissions.

h3. Minimum Role

From the Context Access screen, you can see that you have to be at least a &quot;Super User&quot;.  Merely being a &quot;Member&quot; won&#39;t cut it.  So that&#39;s why logging in fails for Admins with only &quot;Member&quot; roles.

h3. Roles

While we&#39;re at it, why would you want to give another user another role if he or she was going to have the _exact_ same privileges as you?  Technically speaking, if they have the exact same privileges, then their role is equivalent to yours. In other words, you don&#39;t need a new role.

When thinking about roles, think about that access policy there.  The access policy says what your user can and can&#39;t do if you are assigned a particular role.

h2. See Also

See the other tutorial about [Giving a User Manager Access] for an example of how to create a user with a permission level of less than you.

Shaun McCormick&#39;s video on [Understanding MODx Revolution Security|http://vimeo.com/13856994] gives a detailed walk-through of setting up some complex permission schemes.

{pagetree:root=Security Tutorials|startDepth=2}

{scrollbar}";s:8:"versions";a:4:{i:0;a:3:{s:2:"id";s:8:"33226828";s:3:"ver";s:1:"4";s:4:"code";s:3271:"\\

h2. The Problem

You want another MODx Revolution User to have full manager access, with all the [Permissions] of an Administrator user. Perhaps it&#39;s your colleague or your client, but by creating another Administrator, you are handing over the keys to the _entire_ site. This is a simplistic scenario: the other admin would be able to modify or delete your user, so it may not be a viable solution for what you need to do. In the process of walking users through this task, this page gives a brief introduction to roles and access policies.

h2. The Solution

After logging into your site&#39;s manager, do the following:

# Create a new user: Security \-&gt; Manage Users \-&gt; New User
# Be sure you give the new user a unique username, password, and email.
# Before saving the user, click the tab marked *Access Permissions* and click the button marked *Add User Group to User*
## *User Group:* {{Administrator}}
## *Role:* {{Super User}}
# Save the user.  (You can always return to Security \-&gt; Manage Users and right-click the user to update the properties).
# Try logging in to the manager using a different browser to verify that the login works.

h2. Why can&#39;t I add another Administrator with a different [Role|Roles], e.g. a &quot;Member&quot;?

Try it. When you try to login using the other username with only a &quot;Member&quot; role, permission will be denied.  But why?  It has to do with [Context Access|Contexts] and [Access Policies|Policies], which get a lot more complicated in a hurry.  If you have a look at Security \-&gt; Access Controls and then right-click the Administrator User Group \-&gt; Update User Group, then click on the *Context Access* tab. You&#39;ll see something like this:

!User-Group-Perms.jpg|border=1!

By default, MODx Revolution has 2 contexts: *web* (the front-end) and *mgr* (the back-end). From this table, we can learn 2 things: that the _minimum_ role is the Super-User role, and the &quot;Access Policy&quot; in use for this context is &quot;Administrator&quot;.  Even if you don&#39;t understand what all of that means, this is a good place to start educating you about permissions.

h3. Minimum Role

From the Context Access screen, you can see that you have to be at least a &quot;Super User&quot;.  Merely being a &quot;Member&quot; won&#39;t cut it.  So that&#39;s why logging in fails for Admins with only &quot;Member&quot; roles.

h3. Roles

While we&#39;re at it, why would you want to give another user another role if he or she was going to have the _exact_ same privileges as you?  Technically speaking, if they have the exact same privileges, then their role is equivalent to yours. In other words, you don&#39;t need a new role.

When thinking about roles, think about that access policy there.  The access policy says what your user can and can&#39;t do if you are assigned a particular role.

h2. See Also

See the other tutorial about [Giving a User Manager Access] for an example of how to create a user with a permission level of less than you.

Shaun McCormick&#39;s video on [Understanding MODx Revolution Security|http://vimeo.com/13856994] gives a detailed walk-through of setting up some complex permission schemes.

{pagetree:root=Security Tutorials|startDepth=2}

{scrollbar}";}i:1;a:3:{s:2:"id";s:8:"33226836";s:3:"ver";s:1:"3";s:4:"code";s:2834:"\\

h2. The Problem

You want another MODx Revolution User to have full manager access, with all the [Permissions] of an Administrator user. Perhaps it&#39;s your colleague or your client, but by creating another Administrator, you are handing over the keys to the whole site without disclosing your own login.

In the process of walking users through this task, this page gives a brief introduction to roles and access policies.

h2. The Solution

After logging into your site&#39;s manager, do the following:

# Create a new user: Security \-&gt; Manage Users \-&gt; New User
# Be sure you give the new user a unique username, password, and email.
# Before saving the user, click the tab marked *Access Permissions* and click the button marked *Add User Group to User*
## *User Group:* {{Administrator}}
## *Role:* {{Super User}}
# Save the user.  (You can always return to Security \-&gt; Manage Users and right-click the user to update the properties).
# Try logging in to the manager using a different browser to verify that the login works.

h2. Why can&#39;t I add another Administrator with a different [Role|Roles], e.g. a &quot;Member&quot;?

Try it. When you try to login using the other username with only a &quot;Member&quot; role, permission will be denied.  But why?  It has to do with [Context Access|Contexts] and [Access Policies|Policies], which get a lot more complicated in a hurry.  If you have a look at Security \-&gt; Access Controls and then right-click the Administrator User Group \-&gt; Update User Group, then click on the *Context Access* tab. You&#39;ll see something like this:

!User-Group-Perms.jpg|border=1!

By default, MODx Revolution has 2 contexts: *web* (the front-end) and *mgr* (the back-end). From this table, we can learn 2 things: that the _minimum_ role is the Super-User role, and the &quot;Access Policy&quot; in use for this context is &quot;Administrator&quot;.  Even if you don&#39;t understand what all of that means, this is a good place to start educating you about permissions.

h3. Minimum Role

From the Context Access screen, you can see that you have to be at least a &quot;Super User&quot;.  Merely being a &quot;Member&quot; won&#39;t cut it.  So that&#39;s why logging in fails for Admins with only &quot;Member&quot; roles.

h3. Roles

While we&#39;re at it, why would you want to give another user another role if he or she was going to have the _exact_ same privileges as you?  Technically speaking, if they have the exact same privileges, then their role is equivalent to yours. In other words, you don&#39;t need a new role.

When thinking about roles, think about that access policy there.  The access policy says what your user can and can&#39;t do if you are assigned a particular role.


h2. See Also

{pagetree:root=Security Tutorials|startDepth=2}

{scrollbar}";}i:2;a:3:{s:2:"id";s:8:"33226832";s:3:"ver";s:1:"2";s:4:"code";s:2839:"\\

h2. The Problem

You want another MODx Revolution User to have full manager access, with all the [Permissions] of an Administrator user. Perhaps it&#39;s your colleague or your client, but by creating another Administrator, you are handing over the keys to the whole site without disclosing your own login.

In the process of walking users through this task, this page gives a brief introduction to roles and access policies.

h2. The Solution

After logging into your site&#39;s manager, do the following:

# Create a new user: Security \-&gt; Manage Users \-&gt; New User
# Be sure you give the new user a unique username, password, and email.
# Before saving the user, click the tab marked *Access Permissions* and click the button marked *Add User Group to User*
## *User Group:* {{Administrator}}
## *Role:* {{Super User}}
# Save the user.  (You can always return to Security \-&gt; Manage Users and right-click the user to update the properties).
# Try logging in to the manager using a different browser to verify that the login works.

h2. Why can&#39;t I add another Administrator with a different [Role|Roles], e.g. a &quot;Member&quot;?

Try it. When you try to login using the other username with only a &quot;Member&quot; role, permission will be denied.  But why?  It has to do with [Context Access|Contexts] and [Access Policies| Policies], which get a lot more complicated in a hurry.  If you have a look at Security \-&gt; Access Controls and then right-click the Administrator User Group \-&gt; Update User Group, then click on the *Context Access* tab. You&#39;ll see something like this:

!User-Group-Perms.jpg|border=1!

By default, MODx Revolution has 2 contexts: *web* (the front-end) and *mgr* (the back-end). From this table, we can learn 2 things: that the _minimum_ role is the Super-User role, and the &quot;Access Policy&quot; in use for this context is &quot;Administrator&quot;.  Even if you don&#39;t understand what all of that means, this is a good place to start educating you about permissions. 

h3. Minimum Role

From the Context Access screen, you can see that you have to be at least a &quot;Super User&quot;.  Merely being a &quot;Member&quot; won&#39;t cut it.  So that&#39;s why logging in fails for Admins with only &quot;Member&quot; roles. 

h3. Roles

While we&#39;re at it, why would you want to give another user another role if he or she was going to have the _exact_ same privileges as you?  Technically speaking, if they have the exact same privileges, then their role is equivalent to yours. In other words, you don&#39;t need a new role. 

When thinking about roles, think about that access policy there.  The access policy says what your user can and can&#39;t do if you are assigned a particular role.
 

h2. See Also

{pagetree:root=Security Tutorials|startDepth=2}

{scrollbar}";}i:3;a:3:{s:2:"id";s:8:"33226831";s:3:"ver";s:1:"1";s:4:"code";s:1240:"\\

h2. The Problem

You want another MODx Revolution User to have full manager access, with all the [Permissions] of an Administrator user. Perhaps it&#39;s your colleague or your client, but by creating another Administrator, you are handing over the keys to the whole site without disclosing your own login.

h2. The Solution

After logging into your site&#39;s manager, do the following:

# Create a new user: Security \-&gt; Manage Users \-&gt; New User
# Be sure you give the new user a unique username, password, and email.
# Before saving the user, click the tab marked *Access Permissions* and click the button marked *Add User Group to User*
## User Group: Administrator
## Role: Super User
# Save the user.  (You can always return to Security \-&gt; Manage Users and right-click the user to update the properties).
# Try logging in to the manager using a different browser to verify that the login works.

h2. Questions

*Why can&#39;t I add another Administrator with a different [Roles|Role], e.g. a &quot;Member&quot;?*

Try it. When you try to login using the other username with only a &quot;Member&quot; role, permission will be denied.  But why? 

h2. See Also

{pagetree:root=Security Tutorials|startDepth=2}

{scrollbar}";}}}