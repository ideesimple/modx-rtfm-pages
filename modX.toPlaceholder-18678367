a:5:{s:2:"id";s:8:"18678367";s:4:"info";a:4:{s:6:"Title:";s:18:"modX.toPlaceholder";s:7:"Author:";s:15:"Shaun McCormick";s:16:"Last Changed by:";s:15:"Shaun McCormick";s:12:"Wiki Markup:";s:33:"[revolution20:modX.toPlaceholder]";}s:6:"parent";s:8:"18678365";s:6:"source";s:590:"\\

h2. modX::toPlaceholder

Recursively validates and sets placeholders appropriate to the value type passed.

h2. Syntax

API Doc: http://api.modxcms.com/modx/modX.html#toPlaceholder

{code}
void toPlaceholder (string $key, mixed $value, [string $prefix = &#39;&#39;], [string $separator = &#39;.&#39;])
{code}

h2. Example

Set a placeholder and prefix its key with &#39;my.&#39;
{code}
$modx-&gt;toPlaceholder(&#39;name&#39;,&#39;John&#39;,&#39;my&#39;);
{code}

h2. See Also

* [modX.toPlaceholders]
* [modX.setPlaceholder]
* [modX.setPlaceholders]
* [modX.getPlaceholder]

{scrollbar}";s:8:"versions";a:1:{i:0;a:3:{s:2:"id";s:8:"18678367";s:3:"ver";s:1:"1";s:4:"code";s:590:"\\

h2. modX::toPlaceholder

Recursively validates and sets placeholders appropriate to the value type passed.

h2. Syntax

API Doc: http://api.modxcms.com/modx/modX.html#toPlaceholder

{code}
void toPlaceholder (string $key, mixed $value, [string $prefix = &#39;&#39;], [string $separator = &#39;.&#39;])
{code}

h2. Example

Set a placeholder and prefix its key with &#39;my.&#39;
{code}
$modx-&gt;toPlaceholder(&#39;name&#39;,&#39;John&#39;,&#39;my&#39;);
{code}

h2. See Also

* [modX.toPlaceholders]
* [modX.setPlaceholder]
* [modX.setPlaceholders]
* [modX.getPlaceholder]

{scrollbar}";}}}