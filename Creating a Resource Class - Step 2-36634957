a:5:{s:2:"id";s:8:"36634957";s:4:"info";a:4:{s:6:"Title:";s:34:"Creating a Resource Class - Step 2";s:7:"Author:";s:15:"Shaun McCormick";s:16:"Last Changed by:";s:15:"Shaun McCormick";s:12:"Wiki Markup:";s:49:"[revolution20:Creating a Resource Class - Step 2]";}s:6:"parent";s:8:"36634961";s:6:"source";s:1238:"{panel}This tutorial is part of a Series:
* [Part I: Creating a Custom Resource Class|Creating a Resource Class]
* Part II: Handling our CRC Behavior
* [Part III: Customizing the Controllers|Creating a Resource Class - Step 3]
* [Part IV: Customizing the Processors|Creating a Resource Class - Step 4]{panel}

Now that we&#39;ve got our class, we want to append our copyright date to it. Let&#39;s go ahead:

h2. Overriding getContent

Go ahead and add this method to your CopyrightedResource class:

{code}
public function getContent(array $options = array()) {
   $content = parent::getContent($options);
   $year = date(&#39;Y&#39;);
   $content .= &#39;&lt;div class=&quot;copyright&quot;&gt;&amp;copy; &#39;.$year.&#39;. All Rights Reserved.&lt;/div&gt;&#39;;
   return $content;
}
{code}

This will automatically append the Copyright to the bottom of every content for the Resource - not the end of the [Template|Templates], but the end of the contents of the \[\[*content\]\] placeholder.

h2. Conclusion

That&#39;s it! It&#39;s really that simple. You obviously could do a lot more here, but that&#39;s beyond the scope of this tutorial.

Now let&#39;s [make our controller files|Creating a Resource Class - Step 3].

{scrollbar}";s:8:"versions";a:4:{i:0;a:3:{s:2:"id";s:8:"36634957";s:3:"ver";s:1:"4";s:4:"code";s:1238:"{panel}This tutorial is part of a Series:
* [Part I: Creating a Custom Resource Class|Creating a Resource Class]
* Part II: Handling our CRC Behavior
* [Part III: Customizing the Controllers|Creating a Resource Class - Step 3]
* [Part IV: Customizing the Processors|Creating a Resource Class - Step 4]{panel}

Now that we&#39;ve got our class, we want to append our copyright date to it. Let&#39;s go ahead:

h2. Overriding getContent

Go ahead and add this method to your CopyrightedResource class:

{code}
public function getContent(array $options = array()) {
   $content = parent::getContent($options);
   $year = date(&#39;Y&#39;);
   $content .= &#39;&lt;div class=&quot;copyright&quot;&gt;&amp;copy; &#39;.$year.&#39;. All Rights Reserved.&lt;/div&gt;&#39;;
   return $content;
}
{code}

This will automatically append the Copyright to the bottom of every content for the Resource - not the end of the [Template|Templates], but the end of the contents of the \[\[*content\]\] placeholder.

h2. Conclusion

That&#39;s it! It&#39;s really that simple. You obviously could do a lot more here, but that&#39;s beyond the scope of this tutorial.

Now let&#39;s [make our controller files|Creating a Resource Class - Step 3].

{scrollbar}";}i:1;a:3:{s:2:"id";s:8:"36634968";s:3:"ver";s:1:"3";s:4:"code";s:1228:"{panel}This tutorial is part of a Series:
* [Part I: Creating a Custom Resource Class|Creating a Resource Class]
* Part II: Handling our CRC Behavior
* [Part III: Customizing the Controllers|Creating a Resource Class - Step 3]
* [Part IV: Customizing the Processors|Creating a Resource Class - Step 4]{panel}

Now that we&#39;ve got our class, we want to append our copyright date to it. Let&#39;s go ahead:

h2. Overriding getContent

Go ahead and add this method to your CopyrightedResource class:

{code}
public function getContent(array $options = array()) {
   $content = parent::getContent($options);
   $year = date(&#39;Y&#39;);
   $content .= &#39;&lt;div class=&quot;copyright&quot;&gt;&amp;copy; &#39;.$year.&#39;. All Rights Reserved.&lt;/div&gt;&#39;;
   return $content;
}
{code}

This will automatically append the Copyright to the bottom of every content for the Resource - not the end of the [Template], but the end of the contents of the \[\[*content\]\] placeholder.

h2. Conclusion

That&#39;s it! It&#39;s really that simple. You obviously could do a lot more here, but that&#39;s beyond the scope of this tutorial.

Now let&#39;s [make our controller files|Creating a Resource Class - Step 3].

{scrollbar}";}i:2;a:3:{s:2:"id";s:8:"36634967";s:3:"ver";s:1:"2";s:4:"code";s:327:"{panel}This tutorial is part of a Series:
* [Part I: Creating a Custom Resource Class|Creating a Resource Class]
* Part II: Handling our CRC Behavior
* [Part III: Customizing the Controllers|Creating a Resource Class - Step 3]
* [Part IV: Customizing the Processors|Creating a Resource Class - Step 4]{panel}

h2. 

{scrollbar}";}i:3;a:3:{s:2:"id";s:8:"36634958";s:3:"ver";s:1:"1";s:4:"code";s:320:"{panel}This tutorial is part of a Series:
* [Part I: Creating a Custom Resource Class|Creating a Resource Class]
* Part II: Handling our CRC Behavior
* [Part III: Customizing the Controllers|Creating a Resource Class - Step 3]
* [Part IV: Customizing the Processors|Creating a Resource Class - Step 4]

h2. 

{scrollbar}";}}}