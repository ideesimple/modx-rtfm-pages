a:5:{s:2:"id";s:8:"18678375";s:4:"info";a:4:{s:6:"Title:";s:12:"modX.lexicon";s:7:"Author:";s:15:"Shaun McCormick";s:16:"Last Changed by:";s:17:"Everett Griffiths";s:12:"Wiki Markup:";s:27:"[revolution20:modX.lexicon]";}s:6:"parent";s:8:"18678335";s:6:"source";s:819:"\\

h2. modX::lexicon

Grabs a processed Lexicon Entry.

{note}This may also be a modLexicon object as well, if the Lexicon has been loaded. PHP supports having objects and methods with the same name.{note}

h2. Syntax

API Doc: http://api.modxcms.com/modx/modX.html#lexicon

{code}
void lexicon (string $key, [array $params = array()])
{code}

h2. Example

Output the translation of the &#39;welcome_message&#39; Entry, and sets the &#39;name&#39; Placeholder in it.
{code}
echo $modx-&gt;lexicon(&#39;welcome_message&#39;,array(&#39;name&#39; =&gt; &#39;John&#39;));
{code}

The above example assumes a message that contains a placeholder for &quot;name&quot;, e.g.

{code}
$_lang[&#39;welcome_message&#39;] = &#39;Hello [[+name]]!  How are you today?&#39;;
{code}

h2. See Also

* [Internationalization]

{scrollbar}";s:8:"versions";a:3:{i:0;a:3:{s:2:"id";s:8:"18678375";s:3:"ver";s:1:"3";s:4:"code";s:819:"\\

h2. modX::lexicon

Grabs a processed Lexicon Entry.

{note}This may also be a modLexicon object as well, if the Lexicon has been loaded. PHP supports having objects and methods with the same name.{note}

h2. Syntax

API Doc: http://api.modxcms.com/modx/modX.html#lexicon

{code}
void lexicon (string $key, [array $params = array()])
{code}

h2. Example

Output the translation of the &#39;welcome_message&#39; Entry, and sets the &#39;name&#39; Placeholder in it.
{code}
echo $modx-&gt;lexicon(&#39;welcome_message&#39;,array(&#39;name&#39; =&gt; &#39;John&#39;));
{code}

The above example assumes a message that contains a placeholder for &quot;name&quot;, e.g.

{code}
$_lang[&#39;welcome_message&#39;] = &#39;Hello [[+name]]!  How are you today?&#39;;
{code}

h2. See Also

* [Internationalization]

{scrollbar}";}i:1;a:3:{s:2:"id";s:8:"39355865";s:3:"ver";s:1:"2";s:4:"code";s:820:"\\

h2. modX::lexicon

Grabs a processed Lexicon Entry.

{note}This may also be a modLexicon object as well, if the Lexicon has been loaded. PHP supports having objects and methods with the same name.{note}

h2. Syntax

API Doc: http://api.modxcms.com/modx/modX.html#lexicon

{code}
void lexicon (string $key, [array $params = array()])
{code}

h2. Example

Output the translation of the &#39;welcome_message&#39; Entry, and sets the &#39;name&#39; Placeholder in it.
{code}
echo $modx-&gt;lexicon(&#39;welcome_message&#39;,array(&#39;name&#39; =&gt; &#39;John&#39;));
{code}

The above example assumes a message that contains a placeholder for &quot;name&quot;, e.g.

{code}
$_lange[&#39;welcome_message&#39;] = &#39;Hello [[+name]]!  How are you today?&#39;;
{code}

h2. See Also

* [Internationalization]

{scrollbar}";}i:2;a:3:{s:2:"id";s:8:"39355864";s:3:"ver";s:1:"1";s:4:"code";s:628:"\\

h2. modX::lexicon

Grabs a processed Lexicon Entry.

{note}This may also be a modLexicon object as well, if the Lexicon has been loaded. PHP supports having objects and methods with the same name.{note}

h2. Syntax

API Doc: http://api.modxcms.com/modx/modX.html#lexicon

{code}
void lexicon (string $key, [array $params = array()])
{code}

h2. Example

Output the translation of the &#39;welcome_message&#39; Entry, and sets the &#39;name&#39; Placeholder in it.
{code}
echo $modx-&gt;lexicon(&#39;welcome_message&#39;,array(&#39;name&#39; =&gt; &#39;John&#39;));
{code}

h2. See Also

* [Internationalization]

{scrollbar}";}}}